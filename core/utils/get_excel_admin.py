import pandas as pd
from io import BytesIO
from openpyxl import load_workbook
from openpyxl.styles import Font, PatternFill, Alignment
from openpyxl.utils import get_column_letter

from middlewares.enums import Variables


def export_all_user_results_to_excel(variables: Variables) -> BytesIO:
    test_result_repo = variables.db.test_result
    user_repo = variables.db.user

    results = test_result_repo.get_all_with_users()  # üëà —Ç—ã –¥–æ–ª–∂–µ–Ω —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏

    data = []
    for result, user in results:
        data.append({
            "ID": str(user.user_id),
            "–§–ò–û": user.full_name,
            "Email": user.email or '',
            "Username": user.username or '',
            "–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è": user.educational_organization or '',
            "–°—Ç–∞—Ç—É—Å": user.status or '',
            "–ö–æ–Ω–≥—Ä–µ—Å—Å": "–î–∞" if user.congress else "–ù–µ—Ç",
            "–¢–µ—Å—Ç": result.test_name,
            "–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö": result.correct_answers,
            "–í—Å–µ–≥–æ": result.total_questions,
            "–ë–∞–ª–ª—ã": result.points
        })

    df = pd.DataFrame(data)

    output = BytesIO()
    df.to_excel(output, index=False, sheet_name="–†–µ–∑—É–ª—å—Ç–∞—Ç—ã")
    output.seek(0)

    wb = load_workbook(output)
    ws = wb.active

    header_fill = PatternFill(start_color="B7DEE8", end_color="B7DEE8", fill_type="solid")
    bold_font = Font(bold=True)
    center_align = Alignment(horizontal="center", vertical="center")

    for cell in ws[1]:
        cell.fill = header_fill
        cell.font = bold_font
        cell.alignment = center_align

    for row in ws.iter_rows(min_row=2):
        for cell in row:
            cell.alignment = center_align

    ws.column_dimensions['A'].width = 14.3
    ws.column_dimensions['B'].width = 28.5
    ws.column_dimensions['C'].width = 28.5
    ws.column_dimensions['D'].width = 14.3
    ws.column_dimensions['E'].width = 14.3
    ws.column_dimensions['F'].width = 30
    ws.column_dimensions['G'].width = 14.3
    ws.column_dimensions['H'].width = 20
    ws.column_dimensions['I'].width = 13
    ws.column_dimensions['J'].width = 14.3
    ws.column_dimensions['K'].width = 14.3

    for row in ws.iter_rows(min_row=2, min_col=1, max_col=1):
        for cell in row:
            cell.number_format = "@"

    final_output = BytesIO()
    wb.save(final_output)
    final_output.seek(0)
    return final_output
